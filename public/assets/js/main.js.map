{"version":3,"sources":["main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["/* eslint-disable no-console */\n'use strict';\n\n//ELEMENTS\nconst inputEl = document.querySelector('.app-input');\nconst btnEl = document.querySelector('.btn');\nconst resultListEl = document.querySelector('.results__list');\nconst favouritesListEl = document.querySelector('.favourites__list');\n\nconst URL = 'http://api.tvmaze.com/search/shows?q=';\nconst DEFULT_IMAGE = 'https://via.placeholder.com/210x295/f4eded/9b1414/?text=';\n\n//EMPTY ARRAYS of OBJECTS\n//Empty array for storing all the info from the result on any search\nlet resultsObjectsArr = [];\n//Empty array for storing user's favourites shows\nlet favShowsObjectsArr = [];\n\n//FUNCTIONS\n//Add a class to each item on a array\nfunction appendClass(myElement, myClass) {\n  myElement.classList.add(myClass);\n  myElement.setAttribute(\n    'title',\n    'Click para añadir este show a tu lista de favoritos'\n  );\n  return myElement;\n}\n\nfunction createLiOnDOM(id, name, image) {\n  const newItemEl = document.createElement('li');\n  newItemEl.setAttribute('data-id', id);\n\n  //Create content nodes\n  const contentItemImgEl = document.createElement('img');\n  contentItemImgEl.classList.add('show-card__img');\n  contentItemImgEl.setAttribute('src', image);\n  contentItemImgEl.setAttribute('alt', name);\n\n  const contentItemTitleEl = document.createElement('h3');\n  contentItemTitleEl.classList.add('show-card__title');\n  const contentItemTitleText = document.createTextNode(name);\n  contentItemTitleEl.appendChild(contentItemTitleText);\n\n  //Append elements\n  newItemEl.appendChild(contentItemImgEl);\n  newItemEl.appendChild(contentItemTitleEl);\n\n  return newItemEl;\n}\n\n//Create li items from the API result\nfunction createItemsFromObjects(array, myClass) {\n  const liArr = [];\n  for (const element of array) {\n    const { show } = element;\n    console.log(show);\n    const { id, name, image } = show;\n\n    let finalImage = '';\n    if (!image) {\n      finalImage = `${DEFULT_IMAGE}${name}`;\n    } else {\n      finalImage = image.medium;\n    }\n\n    //Advanced DOM: Create <li> and append them to the DOM\n    const liOnDOM = createLiOnDOM(id, name, finalImage);\n\n    //Add class 'show-card' for visual styles\n    const liOnDOMWithClass = appendClass(liOnDOM, myClass);\n    liArr.push(liOnDOMWithClass);\n  }\n  return liArr;\n}\n\n//Append each li to its list\nfunction paintResults(array, list) {\n  // Reset list content\n  list.innerHTML = '';\n  for (const element of array) {\n    list.appendChild(element);\n  }\n}\n\nfunction createItemsFromObjArr(array) {\n  const arrItemsToPaint = [];\n  for (const item of array) {\n    const name = item.title;\n    const url = item.url;\n    const id = item.id;\n\n    //Create elements and contents\n    const prevItemEl = document.createElement('li');\n\n    const prevItemImgEl = document.createElement('img');\n    prevItemImgEl.setAttribute('src', url);\n    prevItemImgEl.setAttribute('alt', name);\n\n    const prevItemTitleEl = document.createElement('h3');\n    const prevItemTitleContent = document.createTextNode(name);\n    prevItemTitleEl.appendChild(prevItemTitleContent);\n\n    //Append filled elements to my item\n    prevItemEl.appendChild(prevItemImgEl);\n    prevItemEl.appendChild(prevItemTitleEl);\n    prevItemEl.setAttribute('id', id);\n    prevItemEl.classList.add('preview--favourite');\n\n    //Add reset button to each item\n    addResetBtn(id, prevItemEl);\n\n    arrItemsToPaint.push(prevItemEl);\n  }\n  return arrItemsToPaint;\n}\n\nfunction storeInLS(key, array) {\n  localStorage.setItem(key, JSON.stringify(array));\n}\n\nfunction refreshPage() {\n  //Check if LS has something\n  const infoSavedInLS = JSON.parse(localStorage.getItem('myObject'));\n\n  if (infoSavedInLS) {\n    const savedItemToPaint = createItemsFromObjArr(infoSavedInLS);\n\n    favShowsObjectsArr = savedItemToPaint;\n\n    // Paint li on my favourist list\n    paintResults(savedItemToPaint, favouritesListEl);\n  } else {\n    console.log('caché is empty');\n  }\n}\n\nfunction handlerResetBtnClick(event) {\n  const resetBtnClicked = event.currentTarget;\n\n  const itemForRemove = resetBtnClicked.parentNode;\n\n  //Removing from the painted list\n  favouritesListEl.removeChild(itemForRemove);\n}\n\nfunction addResetBtn(id, myItem) {\n  //Create btn reset\n  const resetBtnEl = document.createElement('button');\n  resetBtnEl.classList.add('reset-btn');\n  resetBtnEl.setAttribute('title', 'Borra de favoritos');\n\n  const resetBtnContent = document.createTextNode('x');\n\n  resetBtnEl.appendChild(resetBtnContent);\n  resetBtnEl.setAttribute('data--id', id);\n\n  myItem.appendChild(resetBtnEl);\n\n  //Add listener\n  resetBtnEl.addEventListener('click', handlerResetBtnClick);\n}\n\nfunction storeFavShowObjectInArr(id, array1, array2) {\n  for (const item of array1) {\n    if (item.show.id === id) {\n      array2.push(item);\n    }\n  }\n  return array2;\n}\n\n//Add favourite functionlity on click\nfunction handlerAddToFavClick(event) {\n  const currentCard = event.currentTarget;\n  const idFav = parseInt(currentCard.getAttribute('data-id'));\n  console.log(idFav);\n\n  currentCard.classList.toggle('show-card--favourite');\n\n  //Store my favourite show as an object in my fav objects array\n  storeFavShowObjectInArr(idFav, resultsObjectsArr, favShowsObjectsArr);\n  console.log(favShowsObjectsArr);\n\n  //Create li fav items from data\n  const myFavItems = createItemsFromObjects(\n    favShowsObjectsArr,\n    'preview--favourite'\n  );\n  //Paint li fav on the list fav\n  paintResults(myFavItems, favouritesListEl);\n\n  //Store my favShowsObjectsArr in LS\n  storeInLS('myObject', favShowsObjectsArr);\n}\n\n//FUNCTIONS\nfunction getShowsFromAPI(query) {\n  fetch(`${URL}${query}`)\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(responseParsed) {\n      //On any search, I fill this array with the objects that come from the API, with all the info of each show on it!!\n      resultsObjectsArr = responseParsed;\n\n      //If there are no results... :(\n      if (!responseParsed.length) {\n        resultListEl.innerHTML = `\n        <p>Lo sentimos. No hay resultados para tu búsqueda \"${query}\". Inténtalo de nuevo con otro nombre :)</p>\n        `;\n\n        //If there are results, keep going :)\n      } else {\n        //Create li items from data\n        const myItems = createItemsFromObjects(responseParsed, 'show-card');\n        //Paint li on the list results\n        paintResults(myItems, resultListEl);\n\n        // Add listener to each li card to impelment 'Add to Favourites' new functionality\n        const resultsCardsEls = document.querySelectorAll('.show-card');\n        for (const card of resultsCardsEls) {\n          card.addEventListener('click', handlerAddToFavClick);\n        }\n      }\n    });\n}\n\n//Handler for main Search button\nfunction handlerBtnSearchClick(event) {\n  event.preventDefault();\n\n  const userValue = inputEl.value;\n  //Make API fetch just if the user has written something\n  if (userValue) {\n    getShowsFromAPI(userValue);\n  }\n}\n\n//Add lister to main Search button\nbtnEl.addEventListener('click', handlerBtnSearchClick);\n\n//Retrieve info from LS when refreshing\nrefreshPage();\n"]}